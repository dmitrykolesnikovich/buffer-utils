import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.3.70"
    id "com.github.johnrengelman.shadow" version '5.2.0'
//    id 'org.kordamp.gradle.jdeps' version '0.7.1-SNAPSHOT'
}

// jitpack
group = 'com.github.kotlin_graphics'

ext {
    moduleName = "${group}.kool"
    lwjgl_version = "3.2.3"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib".toString()

    ["", "-jemalloc"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        runtimeOnly "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

compileKotlin {

    kotlinOptions {
        freeCompilerArgs = ["-Xuse-experimental=kotlin.Experimental"]
        jvmTarget = "11"
    }
//    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
//        javaParameters = true
    }
}

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                "--patch-module", "$moduleName=${sourceSets["main"].output.asPath}"]
        classpath = files()
    }
}

jar {
    inputs.property("moduleName", moduleName)
//    manifest.attributes(
//            'Automatic-Module-Name': moduleName
//            'Multi-Release': 'true'
//    )
}

//jdepsReport {
//    multiReleaseJars = [
//            'lwjgl-3.2.2.jar': 12,
//////            'lwjgl-*': 12,
//////            'lwjgl-3.2.2.jar': 12
//    ]
//}